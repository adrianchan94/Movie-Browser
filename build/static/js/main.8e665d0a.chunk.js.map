{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/MovieCard.js","components/Home.js","components/AboutView.js","components/SearchView.js","components/MovieView.js","components/NotFound.js","components/UpcomingMovies.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","searchText","setSearchText","history","useHistory","className","to","icon","faFilm","class","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onSubmit","event","preventDefault","searchQuery","target","elements","value","push","placeholder","onChange","e","Hero","text","backdrop","movieView","style","backgroundImage","faPlayCircle","MovieCard","movie","posterURL","poster_path","detailURL","width","src","alt","original_title","TrendingMovies","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","fetch","then","response","json","data","results","console","log","resultsHTML","map","obj","i","Home","AboutView","SearchView","keyword","searchResults","title","length","MovieView","useParams","movieDetails","setMovieDetails","trailerURL","setTrailerURL","movieTrailerURL","allGenres","posterPath","backdropURL","genres","name","key","backdrop_path","overview","release_date","vote_average","vote_count","height","url","renderMovieDetails","NotFound","GetUpcomingMovies","upcomingMovies","setUpcomingMovies","UpcomingMovies","App","setSearchResults","Navbar","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e665d0a.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFilm } from '@fortawesome/free-solid-svg-icons'\nimport { Link, useHistory } from 'react-router-dom';\n\n\nconst NavBar = ({ searchText, setSearchText }) => {\n  const history = useHistory()\n\n  const updateSearchText = (e) => {\n\n    history.push(\"/search\")\n    setSearchText(e.target.value)\n  }\n\n  const formSubmit = (event) => {\n    event.preventDefault();\n\n    let searchQuery = event.target.elements[0].value\n    history.push(\"/search\")\n    setSearchText(searchQuery)\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-warning\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\"><FontAwesomeIcon icon={faFilm} /> <b>Movie Browser</b></Link>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 mr-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">About</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/upcoming\">Coming Soon</Link>\n            </li>\n          </ul>\n          <form onSubmit={formSubmit} className=\"d-flex\">\n            <input className=\"form-control me-2\"\n              type=\"text\"\n              placeholder=\"Search\"\n              value={searchText}\n              onChange={updateSearchText}\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n          </form>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst Hero = ({ text, backdrop, movieView }) => {\n    return (\n        <>\n            {\n                movieView ?\n\n\n                    <header className='bg-dark text-white p-5 tall-hero-container'>\n                        <h1 className='movie-hero-text'> {text}</h1>\n                        {\n                            backdrop &&\n                            <div className=\"hero-backdrop\" style={{ backgroundImage: `url(${backdrop})` }}></div>\n                        }\n                    </header>\n\n                    :\n\n                    <header className='bg-dark text-white p-5 hero-container'>\n                        <h1 className='hero-text'><FontAwesomeIcon icon={faPlayCircle} /> {text}</h1>\n                        {\n                            backdrop &&\n                            <div className=\"hero-backdrop\" style={{ backgroundImage: `url(${backdrop})` }}></div>\n                        }\n                    </header>\n\n            }\n        </>\n    )\n}\n\nexport default Hero;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst MovieCard = ({ movie }) => {\n    const posterURL = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n    const detailURL = `/movies/${movie.id}`\n    const unavailablePoster = \"https://images.unsplash.com/photo-1604975701397-6365ccbd028a?ixid=MXwxMjA3fDB8MHxzZWFyY2h8OHx8Y2luZW1hfGVufDB8fDB8&ixlib=rb-1.2.1&w=1000&q=80\"\n\n    return (\n        <div className=\"col-lg-3 col-md-6 col-sm-12 my-4\">\n            <div className=\"card\" style={{ width: \"16rem\" }}>\n                {movie.poster_path ?\n                    <img className=\"card-img-top\" src={posterURL} alt={movie.original_title} />\n                    : <img className=\"card-img-top\" src={unavailablePoster} alt={movie.original_title} />\n                }\n                <div className=\"card-body\">\n                    <h5 className=\"card-title pb-2\">{movie.original_title}</h5>\n                    <Link to={detailURL} className=\"btn btn-warning w-100\">Show Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard","import { useEffect, useState, React } from 'react'\nimport Hero from './Hero'\nimport MovieCard from './MovieCard'\n\nconst TrendingMovies = () => {\n  const [trendingMovies, setTrendingMovies] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n\n\n  useEffect(() => {\n    fetch('https://api.themoviedb.org/3/trending/movie/day?api_key=17d4a2274a993dc278559c3122a5c7b1')\n      .then(response => response.json())\n      .then(data => {\n        setTrendingMovies(data.results)\n        setIsLoading(false)\n        console.log(trendingMovies)\n      })\n  }, [trendingMovies])\n\n\n  const resultsHTML = trendingMovies.map((obj, i) => {\n    return <MovieCard movie={obj} key={i} />\n  })\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          {\n            isLoading ?\n              <p className=\"lead my-5 unavailable\">Loading...</p>\n              : resultsHTML\n          }\n        </div>\n      </div>\n    </>\n  )\n}\n\n\n\nconst Home = () => {\n\n  return (\n    <>\n      <Hero text=\"Trending Movies\" />\n      <TrendingMovies />\n    </>\n  )\n}\n\nexport default Home;","import React from 'react'\nimport Hero from './Hero'\n\nconst AboutView = () => {\n  return (\n    <>\n      <Hero text=\"About Us\"/>\n      <div className=\"about container\">\n        <div className=\"row\">\n          <div className=\"col-lg-8 offset-lg-2 my-5\">\n            <p className=\"lead\">\n            Movie Browser is a very simple application that allows you to browse, search, watch movie trailers, read synopsis, and see rating for your favorite movies. \n            <br /><br/>\n            Built with React, Bootstrap & TMDb API. \n            </p>\n            <small>Copyright (c) 2021 Adrian Chan</small>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\n\nexport default AboutView","import React from 'react'\nimport Hero from './Hero'\nimport MovieCard from './MovieCard'\n\n//TMdb API KEY = 17d4a2274a993dc278559c3122a5c7b1\n\nconst SearchView = ({ keyword, searchResults }) => {\n    const title = `You are searching for ${keyword}`\n    console.log(searchResults, \"are the search results\")\n\n    const resultsHTML = searchResults.map((obj, i) => {\n        return <MovieCard movie={obj} key={i} />\n    })\n\n    return (\n        <>\n            <Hero text={title} />\n            {searchResults.length === 0 ?\n                <div className=\"container my-5\">\n                    <div className=\"row\">\n                        <p className=\"lead unavailable\">No results available</p>\n                    </div>\n                </div>\n                : <div className=\"container\">\n                    <div className=\"row\">\n                        {resultsHTML}\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default SearchView;","import { useState, useEffect, React } from 'react'\nimport Hero from './Hero'\nimport { useParams } from 'react-router-dom'\nimport ReactPlayer from \"react-player\"\n\nconst MovieView = () => {\n    const { id } = useParams()\n    console.log(id)\n\n    const [movieDetails, setMovieDetails] = useState({})\n    const [isLoading, setIsLoading] = useState(true)\n    const [trailerURL, setTrailerURL] = useState({})\n\n    useEffect(() => {\n        console.log('make an api request', id)\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=17d4a2274a993dc278559c3122a5c7b1&language=en-US`)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                setMovieDetails(data)\n                setIsLoading(false)\n            })\n\n        fetch(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=17d4a2274a993dc278559c3122a5c7b1&language=en-US`)\n            .then(response => response.json())\n            .then(data => {\n                setTrailerURL(data.results[0])\n            })\n\n    }, [id])\n\n    function renderMovieDetails() {\n        let movieTrailerURL;\n        let allGenres\n        // .map((obj, i) => {\n        //     return console.log(genres)\n        // })\n        if (movieDetails.genres) {\n            allGenres = movieDetails.genres.map((obj, i) => {\n                return <li>{obj.name}</li>\n            })\n        }\n        \n        if (trailerURL) {\n            movieTrailerURL = `https://www.youtube.com/watch?v=${trailerURL.key}`\n        }\n\n        if (isLoading) {\n            return <Hero text=\"Loading...\" />\n        }\n\n        if (movieDetails) {\n            let posterPath;\n            let backdropURL;\n\n            if (movieDetails.poster_path) {\n                posterPath = `http://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                backdropURL = `http://image.tmdb.org/t/p/original${movieDetails.backdrop_path}`\n\n            } else {\n                posterPath = \"https://images.unsplash.com/photo-1604975701397-6365ccbd028a?ixid=MXwxMjA3fDB8MHxzZWFyY2h8OHx8Y2luZW1hfGVufDB8fDB8&ixlib=rb-1.2.1&w=1000&q=80\"\n            }\n\n            return (\n                <>\n                    <Hero movieView={true} text={movieDetails.original_title} backdrop={backdropURL} />\n                    <div className=\"container my-5\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3 bg-dark py-2\">\n                                <img src={posterPath} alt=\"...\" className=\"img-fluid shadow rounded\" />\n                            </div>\n                            <div className=\"col-md-9 py-4\">\n                                <div className=\"container\">\n\n                                    <h2>{movieDetails.original_title}</h2>\n                                    <p className=\"lead py-2\"><i>{movieDetails.overview}</i></p>\n                                    <p>Release Date: {movieDetails.release_date}</p>\n                                    <p>Vote Average: {movieDetails.vote_average}</p>\n                                    <p>No. of Votes: {movieDetails.vote_count}</p>\n                                    <p>Genres:</p>\n                                    <ul>\n                                    {\n                                            allGenres &&\n                                            allGenres\n                                        }\n                                    </ul>\n                                    <div className=\"player-wrapper\">\n                                        {\n                                            movieTrailerURL &&\n                                            <ReactPlayer\n                                                className=\"react-player\"\n                                                width=\"100%\"\n                                                height=\"100%\"\n                                                url={movieTrailerURL} />\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            )\n        }\n    }\n\n    return renderMovieDetails()\n}\n\n\nexport default MovieView","import React from 'react';\nimport Hero from './Hero'\nimport { Link } from 'react-router-dom';\n\nconst NotFound = () => (\n  <>\n    <Hero text=\"Error 404\" />\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-10 my-5\">\n          <p className=\"lead\">\n            Sorry this page does not exist\n            </p>\n          <Link to=\"/\">\n            Go Home\n    </Link>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nexport default NotFound;","import { useState, useEffect, React } from 'react'\nimport Hero from './Hero'\nimport MovieCard from './MovieCard'\n\nconst GetUpcomingMovies = () => {\n  const [upcomingMovies, setUpcomingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    fetch('https://api.themoviedb.org/3/movie/upcoming?api_key=17d4a2274a993dc278559c3122a5c7b1&language=en-US&page=1')\n      .then(response => response.json())\n      .then(data => {\n        setUpcomingMovies(data.results)\n        setIsLoading(false)\n      })\n  }, [upcomingMovies])\n\n\n  const resultsHTML = upcomingMovies.map((obj, i) => {\n    return <MovieCard movie={obj} key={i} />\n  })\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          {\n            isLoading ?\n              <p className=\"lead my-5 unavailable\">Loading...</p>\n              : resultsHTML\n          }\n        </div>\n      </div>\n    </>\n  )\n}\n\n\n\nconst UpcomingMovies = () => {\n\n  return (\n    <>\n      <Hero text=\"Coming Soon\" />\n      <GetUpcomingMovies />\n    </>\n  )\n}\n\nexport default UpcomingMovies;\n\n","import { React, useState, useEffect } from 'react';\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport AboutView from './components/AboutView'\nimport SearchView from './components/SearchView'\nimport { Switch, Route } from 'react-router-dom'\nimport MovieView from './components/MovieView'\nimport NotFound from './components/NotFound'\nimport UpcomingMovies from './components/UpcomingMovies'\nimport './App.css';\n\nfunction App() {\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(()=>{\n    if(searchText){\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=17d4a2274a993dc278559c3122a5c7b1&language=en-US&query=${searchText}&page=1&include_adult=false`)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        setSearchResults(data.results)\n      })\n    }\n\n  }, [searchText])\n\n  return (\n    <div>\n      <Navbar searchText={searchText} setSearchText={setSearchText}/>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home/>\n        </Route>\n        <Route path=\"/about\" component={AboutView} />\n        <Route path=\"/search\">\n          <SearchView keyword={searchText} searchResults={searchResults} />\n        </Route>\n        <Route path=\"/movies/:id\" component={MovieView}/>\n        <Route path=\"/upcoming\" component={UpcomingMovies} />\n        <Route component={NotFound}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}